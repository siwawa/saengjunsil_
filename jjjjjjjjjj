import time
import pyautogui
from PIL import ImageGrab
from openpyxl import Workbook
import math

write_wb = Workbook()
write_ws = write_wb.active

# 표 기본 구성 만들기
# 시간:            0, 1, 2, 3, 4, ...
# CS- conditioning        ---       ---       ---     ...
# CS+ conditioning             ---       ---       ---    ...
# 먹이 불빛            ---      ---     ---    ...
# 쥐의 행동
write_ws['A1'] = '시간'
write_ws['A2'] = 'CS- conditioning'  # 위쪽 등
write_ws['A3'] = 'CS+ conditioning'  # 아래쪽 등
write_ws['A4'] = '먹이 불빛'
write_ws['A5'] = '쥐의 행동'


def checkcolor(pos1):
    pyautogui.moveTo(pos1)
    screen = ImageGrab.grab()
    color1 = screen.getpixel(pos1)
    print(color1)
    return color1


def euclidean_distance(tuple1, tuple2):
    distance = 0
    for i in range(len(tuple1)):
        distance += (tuple2[i] - tuple1[i]) ** 2
    return math.sqrt(distance)


start_time = time.time()
t = 0
while 1:
    pyautogui.press('space')  # 잠시 영상 멈춤 시키기
    write_ws.cell(1, t + 2, str(t))
    print(t)
    print("###########################")
    #################################################################
    checkuplight = [(504, 356), (507, 350), (518, 360)]
    uplight1 = checkcolor(checkuplight[0])
    uplight2 = checkcolor(checkuplight[1])
    uplight3 = checkcolor(checkuplight[2])
    upison = (euclidean_distance((250, 253, 249), uplight1) < 5) or (euclidean_distance((250, 253, 249), uplight2) < 5) or (euclidean_distance((250, 253, 249), uplight3) < 5)
     
    if upison:
        print("위쪽 등 켜짐")
        write_ws.cell(2, t + 2, '-')
        checkupmice = [(439, 352), (417, 349), (434, 369), (422, 367), (397, 342), (391, 373)]
        micecount = 0
        for posi in checkupmice:
            upmicei = checkcolor(posi)
            if euclidean_distance(upmicei, (0, 0, 0)) < 100:
                micecount += 1

        if micecount >= 2:
            print("위쪽 등 켜지고 위쪽 쥐 있음")
            write_ws.cell(5, t + 2, 'u')
        else:
            print("위쪽 등 켜지고 위쪽 쥐 X")
    else:
        print("위쪽 등 안 켜짐")

    ##################################################################
    checkdownlight = [(506, 509), (519, 501)]
    downlight1 = checkcolor(checkdownlight[0])
    downlight2 = checkcolor(checkdownlight[1])
    downison = (euclidean_distance((250, 253, 249), downlight1) < 5) or (
                euclidean_distance((250, 253, 249), downlight2) < 5)

    if downison:
        print("아래쪽 등 켜짐")
        write_ws.cell(3, t + 2, '-')
        checkdownmice = [(380, 485), (410, 494), (443, 491), (442, 523), (417, 528), (377, 522)]
        micecount = 0
        for posi in checkdownmice:
            downmicei = checkcolor(posi)
            if euclidean_distance(downmicei, (0, 0, 0)) < 100:
                micecount += 1

        if micecount >= 2:  # 최소 2개의 포인트가 쥐임이 확인되어야 함
            print("아래쪽 등 켜지고 아래쪽 쥐 있음")
            write_ws.cell(5, t + 2, 'd')
        else:
            print("아래쪽 등 켜지고 아래쪽 쥐 X")
    else:
        print("아래쪽 등 안 켜짐")
    #################################################################
    checkfoodlight = [(240, 432), (229, 445), (238, 438)]
    foodlight1 = checkcolor(checkfoodlight[0])
    foodlight2 = checkcolor(checkfoodlight[1])
    foodlight3 = checkcolor(checkfoodlight[2])
    foodison = (euclidean_distance((253, 253, 253), foodlight1) < 5) or (
                euclidean_distance((250, 253, 249), foodlight2) < 5 or (
                    euclidean_distance((250, 253, 249), foodlight3) < 5))
    if foodison:
        print("먹이 등 켜짐")
        write_ws.cell(4, t + 2, '-')
    else:
        print("먹이 등 안 켜짐")

    checkfoodmice = [(275, 415), (293, 407), (315, 424), (270, 444), (290, 446), (296, 443), (256, 427), (270, 449)]
    f_micecount = 0
    for posj in checkfoodmice:
        foodmicej = checkcolor(posj)
        if euclidean_distance(foodmicej, (0, 0, 0)) < 30:
            f_micecount += 1

    print(f_micecount)
    if (f_micecount >= 2):  # 최소 2개의 포인트가 쥐임이 확인되어야 함
        print("쥐가 먹이 쪽에 있음")
        write_ws.cell(5, t + 2, 'f')

    ##################################################################
    elapsed_time = time.time() - start_time
    pyautogui.press('space')  # 재생 멈춤 풀기

    i = [(676, 763)]
    col = checkcolor(i[0])
    if (euclidean_distance(col, (66, 156, 227)) < 5):
        break
    time.sleep(1)  # 1초 간격으로 측정
    t += 1  # 엑셀에 표기할 시간
    write_wb.save('C:\\Users\\User\\PycharmProjects\\pythonProject\\micedata_test.xlsx')
#C:\Users\User\PycharmProjects\pythonProject\main.py

print("끗! 감사합니다")

